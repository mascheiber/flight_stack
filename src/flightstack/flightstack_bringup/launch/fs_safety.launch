<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (C) 2022 Martin Scheiber, Christian Brommer,
and others, Control of Networked Systems, University of Klagenfurt, Austria.

All rights reserved.

This software is licensed under the terms of the BSD-2-Clause-License with
no commercial use allowed, the full terms of which are made available
in the LICENSE file. No license in patents is granted.

You can contact the authors at <martin.scheiber@ieee.org>, <christian.brommer@ieee.org>.
-->

<launch>
  <arg name="dev_id" default="1" />
  <arg name="ros_ns" default="" />

  <!-- topic prefix for namespace -->
  <arg name="topic_prefix"  value="/$(arg ros_ns)" if="$(eval arg('ros_ns') != '')" />
  <arg name="topic_prefix"  value="" unless="$(eval arg('ros_ns') != '')" />

  <arg name="use_gps"                   default="False" />

  <!-- Watchdog Parameters -->
  <arg name="watchdog_verbose"          default="False" />
  <arg name="watchdog_check_dt"         default="0.5" />
  <arg name="watchdog_drivers_cfg_file" default="$(find flightstack_bringup)/configs/watchdog/drivers.yaml" />

  <arg name="watchdog_topics_cfg_file"  default="$(find flightstack_bringup)/configs/watchdog/topics_dh.yaml" unless="$(arg use_gps)" />
  <arg name="watchdog_nodes_cfg_file"   default="$(find flightstack_bringup)/configs/watchdog/nodes_dh.yaml" unless="$(arg use_gps)" />

  <arg name="watchdog_topics_cfg_file"  default="$(find flightstack_bringup)/configs/watchdog/topics_gps.yaml" if="$(arg use_gps)" />
  <arg name="watchdog_nodes_cfg_file"   default="$(find flightstack_bringup)/configs/watchdog/nodes_gps.yaml" if="$(arg use_gps)" />

  <arg name="watchdog_topic_action_in"  default="$(arg topic_prefix)/watchdog/action" />
  <arg name="watchdog_topic_log_out"    default="$(arg topic_prefix)/watchdog/log" />
  <arg name="watchdog_topic_status_out" default="$(arg topic_prefix)/watchdog/status" />
  <arg name="watchdog_service_start"    default="$(arg topic_prefix)/watchdog/service/start" />

  <!-- TOLand Parameters -->
  <arg name="toland_imu"                default="$(arg topic_prefix)/mavros/imu/data_raw" />
  <arg name="toland_agl"                default="$(arg topic_prefix)/lidar_lite/range" />
  <arg name="toland_baro"               default="$(arg topic_prefix)/mavros/imu/static_pressure" />
  <!-- <arg name="toland_default"            default="baro" /> -->
  <arg name="toland_default"            default="disabled" /> <!-- baro is too unreliable as AGL sensor for landing detection -->
  <arg name="angle_threshold"           default="10.0" />
  <arg name="distance_threshold"        default="0.38" />

  <!-- Supervisor parameter -->
  <arg name="topic_to_supervise"        default="$(arg topic_prefix)/mavros/vision_pose/pose" />
  <arg name="window_s"                  default="10.0" />
  <arg name="max_norm"                  default="0.3" />

  <!-- Raspberry PI 1 launches -->
  <group if="$(eval arg('dev_id') == 1)">
    <include file="$(find watchdog_bringup)/launch/watchdog.launch">
      <arg name="do_verbose"        value="$(arg watchdog_verbose)" />
      <arg name="entity_check_rate" value="$(arg watchdog_check_dt)" />
      <arg name="topics_cfg_file"   value="$(arg watchdog_topics_cfg_file)" />
      <arg name="nodes_cfg_file"    value="$(arg watchdog_nodes_cfg_file)" />
      <arg name="drivers_cfg_file"  value="$(arg watchdog_drivers_cfg_file)" />

      <arg name="action_i"          value="$(arg watchdog_topic_action_in)" />
      <arg name="log_o"             value="$(arg watchdog_topic_log_out)" />
      <arg name="status_o"          value="$(arg watchdog_topic_status_out)" />
      <arg name="start_service_o"   value="$(arg watchdog_service_start)" />
    </include>

    <include file="$(find estimator_supervisor)/launch/supervisor.launch">
        <arg name="topic_to_supervise"        value="$(arg topic_to_supervise)" />
        <arg name="supervisor_window_s"       value="$(arg window_s)" />
        <arg name="max_norm_changes"          value="$(arg max_norm)" />
        <arg name="estiamte_msg_type"         value="posestamped" />
    </include>

    <include file="$(find to_landing_detector)/launch/toland.launch">
      <arg name="imu_topic"           value="$(arg toland_imu)" />
      <arg name="lrf_topic"           value="$(arg toland_agl)" />
      <arg name="baro_topic"          value="$(arg toland_baro)" />
      <arg name="default_sensor"      value="$(arg toland_default)" />
      <arg name="angle_threshold"     value="$(arg angle_threshold)" />
      <arg name="distance_threshold"  value="$(arg distance_threshold)" />
    </include>
  </group>
</launch>
